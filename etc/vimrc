set encoding=UTF-8 nobomb	" Set encodig
set relativenumber		" Show relative numbers in normal mode
set number 			" Show line number
set nocompatible		" be iMproved, required
set wildmenu			" Better command-line completion		
set completeopt=longest,menu	" Setting for wildmenu
set autoindent			" Autoindent line
set clipboard=unnamed		" Use the OS clipboard
set noerrorbells		" Disable error beeps
set nostartofline		" Don't reset the cursor
set title			" Show filename in titlebar
set display+=lastline		" Always try yo display paragraph last line
set autoread			" Re-read files if unmodified inside Vim
set confirm			" Display confirm dialog when close unsaved file
set wrap			" wrap long line
set visualbell			" Use visualbell instead of 'beep' when doing something wrong
set lazyredraw			" Don't redraw while executing macros
set autochdir			" auto change work directory
set ttimeoutlen=0               " toggle between modes almost instantly
set numberwidth=3		" How many column to use for the line number
set showmode			" Show current mode
set diffopt=filler 		" Add vertical spaces to keep right and left aligned
set diffopt+=iwhite 		" Ignore whitespace changes (focus on code changes)
set report=0			" Report the number of lines changed

" status line
set statusline=
set statusline+=%f\ %2*%m\ %1*%h
set statusline+=%#warningmsg#
set statusline+=%*
set statusline+=%r%=[%{&encoding}\ %{&fileformat}\ %{strlen(&ft)?&ft:'none'}]\ %12.(%c:%l/%L%)

" Show absolute line numbers in insert mode
autocmd InsertEnter * :set norelativenumber
autocmd InsertLeave * :set relativenumber

syntax on

" Set filettype to text for filetypes ending with .txt
autocmd BufNewFile,BufRead *.txt setfiletype text

" Enable soft-wrapping for text files
autocmd FileType text,markdown,html,xhtml,eruby setlocal wrap linebreak nolist

" Enable use of the mouse for all modes
if has('mouse')
  set mouse=a
endif

" Backup, swap, undo
set backupdir=/tmp
set directory=/tmp
set undodir=/tmp

"Return to last edit position when opening files
autocmd BufReadPost *
    \ if line("'\"") >=1 && line("'\"") <= line("$") && &ft !~# 'commit'
    \ |   exe "normal! g'\""
    \ | endif

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Completor
Plugin 'maralla/completor.vim'

" Whenever cursor jumps some distance or moves between windows, it will flash so you can see where it is.
Plugin 'danilamihailov/beacon.nvim'

"C support
Plugin 'WolfgangMehner/c-support'

"Enable C suppport
let  g:C_UseTool_cmake    = 'yes'
let  g:C_UseTool_doxygen = 'yes'

" .csv file support
Plugin 'chrisbra/csv.vim'

" Detect .csv files
if exists("did_load_csvfiletype")
  finish
endif
let did_load_csvfiletype=1

augroup filetypedetect
  au! BufRead,BufNewFile *.csv,*.dat	setfiletype csv
augroup END

" PHP Support
"Plugin 'phpvim/phpcd.vim'
Plugin 'tobyS/pdv'

" Autocolosing brackets
Plugin 'Raimondi/delimitMate'

"Wakatime
Plugin 'wakatime/vim-wakatime'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
